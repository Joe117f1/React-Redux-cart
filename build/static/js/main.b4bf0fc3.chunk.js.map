{"version":3,"sources":["components/Cart/CartItem.module.css","components/Shop/ProductItem.module.css","components/UI/Notification.module.css","components/Cart/CartButton.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","store/ui-slice.js","store/cart-slice.js","store/index.js","components/UI/Card.js","components/Cart/CartItem.js","components/Cart/Cart.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","components/UI/Notification.js","store/cart-actions.js","App.js","index.js"],"names":["module","exports","uiSlice","createSlice","name","initialState","isCartShown","notification","reducers","toggleCart","state","showNotification","action","status","payload","title","message","uiActions","actions","cartSlice","items","totalQuantity","isChanged","replaceCart","addItemToCart","newItem","existingItem","find","item","id","quantity","totalPrice","price","push","removeItemFromCart","filter","cartActions","store","configureStore","reducer","uiReducer","cartReducer","Card","props","className","classes","card","children","CartItem","dispatchFunc","useDispatch","total","toFixed","itemprice","details","onClick","Cart","cartItems","useSelector","cart","map","CartButton","cartQuantity","dispacthFunc","button","badge","MainHeader","header","logo","Layout","ProductItem","description","DUMMY_PRODUCTS","Products","products","product","Notification","specialClasses","error","success","cssClasses","FIRE_BASE_URL","process","isInitialload","App","isCart","useEffect","a","fetchData","fetch","response","ok","Error","json","data","cartData","sendRequest","method","body","JSON","stringify","sendCartData","require","config","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b4bf0fc3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__116Zo\",\"details\":\"CartItem_details__1eUi4\",\"quantity\":\"CartItem_quantity__3VWcf\",\"price\":\"CartItem_price__2mW69\",\"itemprice\":\"CartItem_itemprice__3aklo\",\"actions\":\"CartItem_actions__2yxIb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__8XO5m\",\"price\":\"ProductItem_price__15L5l\",\"actions\":\"ProductItem_actions__1b_S9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3EC_q\",\"error\":\"Notification_error__3sS_E\",\"success\":\"Notification_success__18-Rd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__2uWo8\",\"badge\":\"CartButton_badge__3hcwX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__2iwPW\",\"logo\":\"MainHeader_logo__1qcXr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Products_title__1PRkw\",\"products\":\"Products_products__3qAVV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2p7yG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__Bpu55\"};","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst uiInitialState = { isCartShown: false, notification: null };\r\n\r\nconst uiSlice = createSlice({\r\n    name: 'ui',\r\n    initialState: uiInitialState,\r\n    reducers: {\r\n        toggleCart(state) {\r\n            state.isCartShown = !state.isCartShown;\r\n        },\r\n        showNotification(state, action) {\r\n            state.notification = {\r\n                status: action.payload.status,\r\n                title: action.payload.title,\r\n                message: action.payload.message,\r\n            }\r\n        },\r\n    },\r\n});\r\n\r\nexport const uiActions = uiSlice.actions;\r\nexport default uiSlice.reducer;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst cartInitialState = {\r\n    items: [],\r\n    totalQuantity: 0,\r\n    isChanged: false,\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: cartInitialState,\r\n    reducers: {\r\n        replaceCart(state, action) {\r\n            state.totalQuantity = action.payload.totalQuantity;\r\n            state.items = action.payload.items;\r\n        },\r\n        addItemToCart(state, action) {\r\n            const newItem = action.payload;\r\n            const existingItem = state.items.find(item => item.id === newItem.id);\r\n            state.totalQuantity++;\r\n            state.isChanged = true;\r\n\r\n            if (!existingItem) {\r\n                state.items.push({\r\n                    id: newItem.id,\r\n                    price: newItem.price,\r\n                    quantity: 1,\r\n                    totalPrice: newItem.price,\r\n                    name: newItem.title\r\n                });\r\n            } else {\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n            };\r\n        },\r\n        removeItemFromCart(state, action) {\r\n            const id = action.payload;\r\n            const existingItem = state.items.find(item => item.id === id);\r\n            state.totalQuantity--;\r\n            state.isChanged = true;\r\n            if (existingItem.quantity === 1) {\r\n                state.items = state.items.filter(item => item.id !== id);\r\n            } else {\r\n                existingItem.quantity--;\r\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n            };\r\n        },\r\n    },\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice.reducer;\r\n\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport uiReducer from './ui-slice';\r\nimport cartReducer from './cart-slice';\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        uiReducer,\r\n        cartReducer,\r\n    },\r\n});\r\n\r\nexport default store;","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import { useDispatch } from 'react-redux';\nimport { cartActions } from '../../store/cart-slice';\n\nimport classes from './CartItem.module.css';\n\nconst CartItem = (props) => {\n  const dispatchFunc = useDispatch();\n  const { id, title, quantity, total, price } = props.item;\n\n  const addtItemHandler = () => {\n    dispatchFunc(cartActions.addItemToCart({\n      id,\n      title,\n      price\n    }));\n  };\n\n  const removeItemHandler = () => {\n    dispatchFunc(cartActions.removeItemFromCart(id));\n  };\n\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${total.toFixed(2)}{' '}\n          <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={removeItemHandler}>-</button>\n          <button onClick={addtItemHandler}>+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import { useSelector } from 'react-redux';\nimport Card from '../UI/Card';\nimport classes from './Cart.module.css';\nimport CartItem from './CartItem';\n\nconst Cart = () => {\n  const cartItems = useSelector(state => state.cartReducer.items);\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>\n        {cartItems.map(item =>\n          <CartItem\n            key={item.id}\n            item={{\n              id: item.id,\n              title: item.name,\n              quantity: item.quantity,\n              total: item.totalPrice,\n              price: item.price\n            }}\n          />\n        )}\n      </ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { uiActions } from '../../store/ui-slice';\nimport classes from './CartButton.module.css';\n\nconst CartButton = () => {\n  const cartQuantity = useSelector(state => state.cartReducer.totalQuantity);\n  const dispacthFunc = useDispatch();\n\n  const toggleCartHandler = () => {\n    dispacthFunc(uiActions.toggleCart());\n  };\n  return (\n    <button className={classes.button} onClick={toggleCartHandler}>\n      <span>My Cart</span>\n      <span className={classes.badge}>{cartQuantity}</span>\n    </button>\n  );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = () => {\n  return (\n    <header className={classes.header}>\n      <div className={classes.logo}>\n      <h1>Redux-Cart</h1>\n      <h5>By Yoav Hirshberg</h5>\n      </div>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useDispatch } from 'react-redux';\nimport { cartActions } from '../../store/cart-slice';\n\nimport Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\n\nconst ProductItem = (props) => {\n  const dispatchFunc = useDispatch();\n\n  const { id, title, price, description } = props;\n\n  const addToCartHandler = () => {\n    dispatchFunc(cartActions.addItemToCart({\n      id,\n      title,\n      price,\n    }));\n  };\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addToCartHandler} >Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","import ProductItem from './ProductItem';\nimport classes from './Products.module.css';\n\nconst DUMMY_PRODUCTS = [\n  { id: 'p1', price: 16, title: 'Irish Cook book', description: 'secret manual' },\n  { id: 'p2', price: 12.99, title: 'Expensive apple', description: 'Super apple' },\n  { id: 'p3', price: 68, title: 'Old sailor pipe', description: 'It has half a million miles logged' }\n];\n\nconst Products = () => {\n  return (\n    <section className={classes.products}>\n      <div className={classes.title}>\n        <h2>Buy your favorite products</h2>\n        <p >With the help of Redux, your selected items will be wait\n          for you in firebase for your next login</p>\n      </div>\n      <ul>\n        {DUMMY_PRODUCTS.map(product => {\n          return (\n            <ProductItem\n              key={product.id}\n              id={product.id}\n              title={product.title}\n              price={product.price}\n              description={product.description}\n            />)\n        })}\n      </ul>\n    </section>\n  );\n};\n\nexport default Products;\n","import classes from './Notification.module.css';\r\n\r\nconst Notification = (props) => {\r\n  let specialClasses = '';\r\n\r\n  if (props.status === 'error') {\r\n    specialClasses = classes.error;\r\n  };\r\n  if (props.status === 'success') {\r\n    specialClasses = classes.success;\r\n  };\r\n\r\n  const cssClasses = `${classes.notification} ${specialClasses}`;\r\n\r\n  return (\r\n    <section className={cssClasses}>\r\n      <h2>{props.title}</h2>\r\n      <p>{props.message}</p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Notification;","import { uiActions } from './ui-slice';\r\nimport { cartActions } from './cart-slice';\r\n\r\nconst FIRE_BASE_URL = process.env.REACT_APP_NON_SECRET_URL;\r\n\r\nexport const fetchCartData = () => {\r\n    return async (dispatchFunc) => {\r\n        const fetchData = async () => {\r\n            const response = await fetch(FIRE_BASE_URL);\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Fetch cart data failed!');\r\n            };\r\n\r\n            const data = await response.json();\r\n            return data;\r\n        };\r\n\r\n        try {\r\n            const cartData = await fetchData();\r\n            dispatchFunc(cartActions.replaceCart({\r\n                items: cartData.items || [],\r\n                totalQuantity: cartData.totalQuantity,\r\n            }));\r\n        } catch (error) {\r\n            dispatchFunc(uiActions.showNotification({\r\n                status: 'error',\r\n                title: 'Error!',\r\n                message: 'We couldn\\'t get your cart :/ \\n Let\\'s try a bit later',\r\n            }));\r\n        }\r\n    };\r\n};\r\n\r\nexport const sendCartData = (cart) => {\r\n    return async (dispatchFunc) => {\r\n        dispatchFunc(uiActions.showNotification({\r\n            status: 'pendig',\r\n            title: 'Sending...',\r\n            message: 'Sending cart data',\r\n        }));\r\n\r\n        const sendRequest = async () => {\r\n            const response = await fetch(FIRE_BASE_URL, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    items: cart.items,\r\n                    totalQuantity: cart.totalQuantity\r\n                }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Something went wrong');\r\n            };\r\n        };\r\n        try {\r\n            await sendRequest();\r\n            dispatchFunc(uiActions.showNotification({\r\n                status: 'success',\r\n                title: 'Success',\r\n                message: 'Cart data sent successfuly',\r\n            }));\r\n        } catch (error) {\r\n            dispatchFunc(uiActions.showNotification({\r\n                status: 'error',\r\n                title: 'Error!',\r\n                message: 'sending cart data failed :/',\r\n            }));\r\n        }\r\n    };\r\n};","import { useEffect, Fragment } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport Notification from './components/UI/Notification';\nimport { sendCartData, fetchCartData } from './store/cart-actions';\n\nlet isInitialload = true;\n\nconst App = () => {\n  const dispatchFunc = useDispatch();\n  const isCart = useSelector(state => state.uiReducer.isCartShown);\n  const cart = useSelector(state => state.cartReducer);\n  const notification = useSelector(state => state.uiReducer.notification);\n\n  useEffect(() => {\n    dispatchFunc(fetchCartData())\n  }, [dispatchFunc]);\n\n  useEffect(() => {\n    if (isInitialload) {\n      isInitialload = false;\n      return;\n    };\n\n    if (cart.isChanged) {\n      dispatchFunc(sendCartData(cart));\n    };\n  }, [cart, dispatchFunc]);\n\n  return (\n    <Fragment>\n      {notification && <Notification\n        status={notification.status}\n        title={notification.title}\n        message={notification.message}\n      />}\n      <Layout>\n        {isCart && <Cart />}\n        <Products />\n      </Layout>\n    </Fragment>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/index';\n\nimport './index.css';\nimport App from './App';\nrequire('dotenv').config();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n"],"sourceRoot":""}